version: '3.8'

services:
  web:
    build: .
    command: python manage.py runserver 0.0.0.0:8000
    ports:
      - "8000:8000"
    volumes:
      - .:/app
    env_file:
      - ./.env
    depends_on:
      - db
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8000/healthcheck" ]
      interval: 30s
      timeout: 10s
      retries: 3
  db:
    image: postgres:15
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    ports:
      - "5433:5432"
    environment:
      POSTGRES_DB: os.getenv('DATABASE_NAME')
      POSTGRES_USER: os.getenv('DATABASE_USER')
      POSTGRES_PASSWORD: os.getenv('DATABASE_PASSWORD')
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${DATABASE_USER} -d ${DATABASE_NAME}" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
  pgadmin:
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "5050:80"
    healthcheck:
      test: [ "CMD", "wget", "-O", "-", "http://localhost:80/misc/ping" ]
      interval: 10s
      timeout: 10s
      retries: 5
volumes:
  postgres_data: